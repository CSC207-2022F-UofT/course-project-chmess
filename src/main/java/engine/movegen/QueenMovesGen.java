package engine.movegen;

import engine.entities.Board;
import engine.entities.Piece;
import engine.move.Move;

import java.util.List;

/**
 * Contains a single method which creates list of possible moves
 * a queen can make which is later refined by PostMoveValidator.
 */
public class QueenMovesGen extends MovesGenerator {
    /**
     * Checks if queen can move seven squares along any straight line.
     * Any moves which jump over a piece,
     * are not on the board, or are occupied by a friendly
     * piece are removed from the list. King checks are NOT
     * considered at this stage.
     *
     * @param board the board on which moves are generated
     * @param queen the queen piece for which moves are generated
     * @return the list of possible moves
     */
    @Override
    public List<Move> generate (Board board, Piece queen) {
        int[] origin = queen.getCoords();
        //the coordinate changes for all cardinals and diagonals:
        int[][] directions = {{0, 1},{1, 1},{1, 0},{1, -1},{0, -1},{-1, -1},{-1, 0},{-1, 1}};
        //Moves generated by helper method in MovesGenerator and returned
        return genStraightLineMoves(origin, directions, board);
    }
}
